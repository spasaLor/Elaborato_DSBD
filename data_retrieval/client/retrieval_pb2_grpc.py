# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import retrieval_pb2 as retrieval__pb2


class RetrievalServiceStub(object):
    """Run in the working directory: python -m grpc_tools.protoc -I ./ --python_out=. --pyi_out=. --grpc_python_out=. ./retrieval.proto 

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDickeyFuller = channel.unary_unary(
                '/dataretrieval.RetrievalService/GetDickeyFuller',
                request_serializer=retrieval__pb2.RetrievalRequest.SerializeToString,
                response_deserializer=retrieval__pb2.RetrievalDickeyFuller.FromString,
                )
        self.ListDecomposition = channel.unary_stream(
                '/dataretrieval.RetrievalService/ListDecomposition',
                request_serializer=retrieval__pb2.RetrievalRequest.SerializeToString,
                response_deserializer=retrieval__pb2.RetrievalDecomposition.FromString,
                )
        self.ListHodrickPrescott = channel.unary_stream(
                '/dataretrieval.RetrievalService/ListHodrickPrescott',
                request_serializer=retrieval__pb2.RetrievalRequest.SerializeToString,
                response_deserializer=retrieval__pb2.RetrievalHodrickPrescott.FromString,
                )
        self.ListAutocorrelation = channel.unary_stream(
                '/dataretrieval.RetrievalService/ListAutocorrelation',
                request_serializer=retrieval__pb2.RetrievalRequest.SerializeToString,
                response_deserializer=retrieval__pb2.RetrievalAutocorrelation.FromString,
                )
        self.ListAggregates = channel.unary_stream(
                '/dataretrieval.RetrievalService/ListAggregates',
                request_serializer=retrieval__pb2.RetrievalRequest.SerializeToString,
                response_deserializer=retrieval__pb2.RetrievalAggregates.FromString,
                )


class RetrievalServiceServicer(object):
    """Run in the working directory: python -m grpc_tools.protoc -I ./ --python_out=. --pyi_out=. --grpc_python_out=. ./retrieval.proto 

    """

    def GetDickeyFuller(self, request, context):
        """unary rpc
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDecomposition(self, request, context):
        """client-unary, server-streaming rpc
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListHodrickPrescott(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAutocorrelation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAggregates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RetrievalServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDickeyFuller': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDickeyFuller,
                    request_deserializer=retrieval__pb2.RetrievalRequest.FromString,
                    response_serializer=retrieval__pb2.RetrievalDickeyFuller.SerializeToString,
            ),
            'ListDecomposition': grpc.unary_stream_rpc_method_handler(
                    servicer.ListDecomposition,
                    request_deserializer=retrieval__pb2.RetrievalRequest.FromString,
                    response_serializer=retrieval__pb2.RetrievalDecomposition.SerializeToString,
            ),
            'ListHodrickPrescott': grpc.unary_stream_rpc_method_handler(
                    servicer.ListHodrickPrescott,
                    request_deserializer=retrieval__pb2.RetrievalRequest.FromString,
                    response_serializer=retrieval__pb2.RetrievalHodrickPrescott.SerializeToString,
            ),
            'ListAutocorrelation': grpc.unary_stream_rpc_method_handler(
                    servicer.ListAutocorrelation,
                    request_deserializer=retrieval__pb2.RetrievalRequest.FromString,
                    response_serializer=retrieval__pb2.RetrievalAutocorrelation.SerializeToString,
            ),
            'ListAggregates': grpc.unary_stream_rpc_method_handler(
                    servicer.ListAggregates,
                    request_deserializer=retrieval__pb2.RetrievalRequest.FromString,
                    response_serializer=retrieval__pb2.RetrievalAggregates.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dataretrieval.RetrievalService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RetrievalService(object):
    """Run in the working directory: python -m grpc_tools.protoc -I ./ --python_out=. --pyi_out=. --grpc_python_out=. ./retrieval.proto 

    """

    @staticmethod
    def GetDickeyFuller(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dataretrieval.RetrievalService/GetDickeyFuller',
            retrieval__pb2.RetrievalRequest.SerializeToString,
            retrieval__pb2.RetrievalDickeyFuller.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListDecomposition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/dataretrieval.RetrievalService/ListDecomposition',
            retrieval__pb2.RetrievalRequest.SerializeToString,
            retrieval__pb2.RetrievalDecomposition.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListHodrickPrescott(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/dataretrieval.RetrievalService/ListHodrickPrescott',
            retrieval__pb2.RetrievalRequest.SerializeToString,
            retrieval__pb2.RetrievalHodrickPrescott.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAutocorrelation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/dataretrieval.RetrievalService/ListAutocorrelation',
            retrieval__pb2.RetrievalRequest.SerializeToString,
            retrieval__pb2.RetrievalAutocorrelation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAggregates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/dataretrieval.RetrievalService/ListAggregates',
            retrieval__pb2.RetrievalRequest.SerializeToString,
            retrieval__pb2.RetrievalAggregates.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
